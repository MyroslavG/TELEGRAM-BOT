						TELEGRAM BOT

create a new Bot using BotFather in Telegram:
TOKEN = HTTP API

create in the same repository:
- python code file
- Procfile (add "web: python3 --pythonFileName--")
- requirements.txt ("python-telegram-bot==12.7")

-------------------------------------------------------------------------------------------

PYTHON FILE CODE:

import logging
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters
import os
PORT = int(os.environ.get('PORT', 5000))

# Enable logging
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
                    level=logging.INFO)

logger = logging.getLogger(__name__)
TOKEN = 'YOURTELEGRAMBOTTOKEN'

# Define a few command handlers. These usually take the two arguments update and
# context. Error handlers also receive the raised TelegramError object in error.
def start(update, context):
    """Send a message when the command /start is issued."""
    update.message.reply_text('Hi!')

def help(update, context):
    """Send a message when the command /help is issued."""
    update.message.reply_text('Help!')

def echo(update, context):
    """Echo the user message."""
    update.message.reply_text(update.message.text)

def error(update, context):
    """Log Errors caused by Updates."""
    logger.warning('Update "%s" caused error "%s"', update, context.error)

def main():
    """Start the bot."""
    # Create the Updater and pass it your bot's token.
    # Make sure to set use_context=True to use the new context based callbacks
    # Post version 12 this will no longer be necessary
    updater = Updater(TOKEN, use_context=True)

    # Get the dispatcher to register handlers
    dp = updater.dispatcher

    # on different commands - answer in Telegram
    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("help", help))

    # on noncommand i.e message - echo the message on Telegram
    dp.add_handler(MessageHandler(Filters.text, echo))

    # log all errors
    dp.add_error_handler(error)

    # Start the Bot
    updater.start_webhook(listen="0.0.0.0",
                          port=int(PORT),
                          url_path=TOKEN)
    updater.bot.setWebhook('https://yourherokuappname.herokuapp.com/' + TOKEN)

    # Run the bot until you press Ctrl-C or the process receives SIGINT,
    # SIGTERM or SIGABRT. This should be used most of the time, since
    # start_polling() is non-blocking and will stop the bot gracefully.
    updater.idle()

if __name__ == '__main__':
    main()

-----------------------------------------------------------------------------------

GIT INSTALLATION:

1) install GIT

-- if "git is not recognized as an internal or external command, operable program or batch file":
	You may not have set your PATH correctly to point at your Git installation.
	Modifying PATH on Windows 10:
	- In the Start Menu or taskbar search, search for "environment variable".
	- Select "Edit the system environment variables".
	- Click the "Environment Variables" button at the bottom.
	- Double-click the "Path" entry under "System variables".
	- With the "New" button in the PATH editor, add C:\Program Files\Git\bin\ and C:\Program Files\Git\cmd\ to the end of the list.
	- Close and re-open your console.

to check: git –version

2) create/login GitHub (terminal):
   git config –global user.name “YourUserNameOnGithub”
   git config –global user.email “YourEmail”

-----------------------------------------------------------------------------------

HEROKU CLI:

HEROKU INSTALLATION

1) install Heroku CLI

-- if "Heroku not recognized as an internal or external command (Windows)":
	- npm uninstall -g heroku-cli
	- npm i -g heroku

2) terminal:
	- heroku login
	- heroku create

change the app name in python file code: updater.bot.setWebhook('https://yourherokuappname.herokuapp.com/' + TOKEN)

ADD BILLING (HEROKU ACCOUNT)

	- git init
	- git add .
	- git commit -m "first commit"
	- heroku git:remote -a YourAppName
	- git push heroku master (or "main")

